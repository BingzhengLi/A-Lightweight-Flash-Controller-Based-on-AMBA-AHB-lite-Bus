/*Copyright 2020-2021 T-Head Semiconductor Co., Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
/*
 *Func: This linker is used to put user_prog.bin into .s in order to copy bin
 *into Flash.
 *Update by @Li Bingzheng 20240416.
 */
MEMORY
{
BOOT(RWX)  : ORIGIN = 0x10000000,  LENGTH = 0x4ffff
Flash(RWX) : ORIGIN = 0x70000000,  LENGTH = 0x4ffff
}
__kernel_stack = 0x200bfff8 ;

ENTRY(__reset)

SECTIONS { 
    .reset  	:{. = ALIGN(0x04); *(.reset)} > BOOT AT> BOOT
    .text   	:{. = ALIGN(0x04); *(.text)} > BOOT AT> BOOT
    .data   	:{. = ALIGN(0x04); *(.data)} > BOOT AT> BOOT 
    .rodata 	:{. = ALIGN(0x04); *(.rodata)} > BOOT AT> BOOT    
    .bss    	:{. = ALIGN(0x04); *(.bss*) *.(COMMON)} > BOOT AT>BOOT
    .dummy1   	:{
		  . = ALIGN(0x04); 
                  PROVIDE(__lma_download_bin = .);
                 } > BOOT AT>BOOT
    .downloadbin :
		{ 
                  . = ALIGN(0x04);
		  PROVIDE(__download_bin_start = .); 
		  *(.downloadbin)
                  . = ALIGN(0x04); 
		  PROVIDE(__download_bin_end = .);
		} > Flash AT>BOOT 
}
